// C++ code

// Matias Skenen
// DNI: 45584733

// Parcial SPD DIVISION D

//extra
int flexValor;
int servoPosition;
int sensorVALOR = 0;
#include <Servo.h> 

Servo myServo;
# define flexPin A2 

#define LED_ROJO 13
#define LED_VERDE 12

#define LED_A 7
#define LED_B 6
#define LED_C 5
#define LED_D 4
#define LED_E 3
#define LED_F 2
#define LED_G A4

#define botonSubir 11
#define botonBajar 10
#define botonDetener 9

int nivel = 0;
int piso;
int botonSubida;
int botonBajada;
int botonDetenido;

int montaCargaSUBIENDO = false;
int montaCargaBAJANDO = false;

int botonEmergencia = false;
int acumuladorEmergencia = 0;

void setup()
{
  //extra 
  pinMode(A0, INPUT);
  myServo.attach(A1);
  
  pinMode(botonBajar, INPUT_PULLUP);
  pinMode(botonSubir, INPUT_PULLUP);
  pinMode(botonDetener, INPUT_PULLUP);
  
  pinMode(LED_ROJO, OUTPUT);
  pinMode(LED_VERDE, OUTPUT);
  
  pinMode(LED_A, OUTPUT);
  pinMode(LED_B, OUTPUT);
  pinMode(LED_C, OUTPUT);
  pinMode(LED_D, OUTPUT);
  pinMode(LED_E, OUTPUT);
  pinMode(LED_F, OUTPUT);
  pinMode(LED_G, OUTPUT);
  
  Serial.begin(9600);  
}
void loop()
{ 
  botonSubida = digitalRead(botonSubir);
  botonBajada = digitalRead(botonBajar);
  botonDetenido = digitalRead(botonDetener);

  sensor();
  controladorMontacargas();
	

}
void sensorFlexion()
{
  flexValor = analogRead(flexPin);
  servoPosition = map(flexValor, 770, 950, 0, 180);
  myServo.write(servoPosition);
}
void sensor()
{  
  sensorVALOR = analogRead(A0);
  if(sensorVALOR > 270)
  {
    prenderLuces(LED_ROJO);
    apagarLuces(LED_VERDE);
  }else
  {
    apagarLuces(LED_ROJO);
  }
}
void controladorMontacargas()
{
    if(nivel == 0)
  {
    montacarga();
  }
  
  if(botonDetenido == 0)
  {
    acumuladorEmergencia += 1;
    delay(1000);
    Serial.println("Emergencia Activado");
  }
  
	// Comienzo de programa
  if(acumuladorEmergencia % 2 == 0)
  {
    if(botonSubida == 0 || botonBajada == 0)
    {
      if(botonBajada == 0)
      {
        nivel -= 1;
        prenderLeds(0, 0, 0, 0, 0, 0, 0, 3000);
        montacarga();
        mostrarPiso();
      }
      else
      {
        if(nivel >= 9)
        {
          sensorFlexion();
          piso = 9;
          prenderLeds(1, 1, 1, 1, 0, 1, 1, 3000);
          mostrarPiso();
        }
        else
        {
          prenderLuces(LED_VERDE);
          apagarLuces(LED_ROJO);
          nivel += 1;
          prenderLeds(0, 0, 0, 0, 0, 0, 0, 3000);
          montacarga();
          mostrarPiso();
        }

      }
    }
  }
}
void mostrarPiso()
{
  Serial.println("Usted esta en el piso:");
  Serial.println(piso);
}

//Apagar el contador
void apagarLeds() {
digitalWrite(LED_A, LOW);
digitalWrite(LED_B, LOW);
digitalWrite(LED_C, LOW);
digitalWrite(LED_D, LOW);
digitalWrite(LED_E, LOW);
digitalWrite(LED_F, LOW);
digitalWrite(LED_G, LOW);
}
//Prender el contador
void prenderLeds(int a, int b, int c, int d, int e, int f, int g, int duration) {
digitalWrite(LED_A, a);
digitalWrite(LED_B, b);
digitalWrite(LED_C, c);
digitalWrite(LED_D, d);
digitalWrite(LED_E, e);
digitalWrite(LED_F, f);
digitalWrite(LED_G, g);
delay(duration);
}


void prenderLuces(int led)
{
  digitalWrite(led, HIGH);
}

void apagarLuces(int led)
{
  digitalWrite(led, LOW);
}



void montacarga()
{
  if(nivel > 0)
  {
        switch(nivel) 
        {
          case 1:
          //1
          piso = 1;
          sensorFlexion();
          apagarLeds();
          prenderLeds(0, 1, 1, 0, 0, 0, 0, 1);
          break;
          case 2:
          //2
          piso = 2;
          sensorFlexion();
          apagarLeds();
          prenderLeds(1, 1, 0, 1, 1, 0, 1, 3000);
          break;
          case 3:
          //3
          piso = 3;
          sensorFlexion();
          apagarLeds();
          prenderLeds(1, 1, 1, 1, 0, 0, 1, 3000);
          break;
          case 4:
          //4
          piso = 4;
          sensorFlexion();
          apagarLeds();
          prenderLeds(0, 1, 1, 0, 0, 1, 1, 3000);
          break;
          case 5:
          //5
          piso = 5;
          sensorFlexion();
          apagarLeds();
          prenderLeds(1, 0, 1, 1, 0, 1, 1, 3000);
          break;
          case 6:
          //6
          piso = 6;
          apagarLeds();
          prenderLeds(1, 0, 1, 1, 1, 1, 1, 3000);
          break;
          case 7:
          //7
          piso = 7;
          sensorFlexion();
          apagarLeds();
          prenderLeds(1, 1, 1, 0, 0, 0, 0, 3000);
          break;
          case 8:
          //8
          piso = 8;
          sensorFlexion();
          prenderLeds(1, 1, 1, 1, 1, 1, 1, 3000);
          break;
        }
    }
   else
    {
     piso = 0;
     sensorFlexion();
     apagarLeds();
     prenderLeds(1, 1, 1, 1, 1, 1, 0, 1);
    }
}

